# @package _global_

defaults:
  - override /hydra/sweeper: optuna

# choose metric which will be optimized by Optuna
optimized_metric: "mean_absolute_error"
optimized_mean: "cv_mean"

# here we define Optuna hyperparameter search
# it optimizes for value returned from function with @hydra.main decorator
# docs: https://hydra.cc/docs/plugins/optuna_sweeper/
hydra:
  sweeper:
    _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper

    # storage URL to persist optimization results
    # for example, you can use SQLite if you set 'sqlite:///example.db'
    storage: null

    # name of the study to persist optimization results
    study_name: null

    # number of parallel workers
    n_jobs: 1

    # 'minimize' or 'maximize' the objective
    direction: minimize

    # total number of runs that will be executed
    n_trials: 200

    # choose Optuna hyperparameter sampler
    # docs: https://optuna.readthedocs.io/en/stable/reference/samplers/index.html
    sampler:
      _target_: optuna.samplers.TPESampler
      seed: ${seed}
      consider_prior: true
      prior_weight: 1.0
      consider_magic_clip: true
      consider_endpoints: false
      n_startup_trials: 50
      n_ei_candidates: 10
      multivariate: false
      warn_independent_sampling: true

    # define range of hyperparameters
    params:
      widedeep_tab_mlp.optimizer_lr: tag(log, interval(0.00001, 1))
      widedeep_tab_mlp.optimizer_weight_decay: tag(log, interval(0.00000001, 0.1))
      widedeep_tab_mlp.mlp_hidden_dims: choice([200, 100, 1], [100, 50, 1], [200, 100, 50, 1], [400, 200, 100, 1], [400, 200, 100, 50, 1])
      widedeep_tab_mlp.mlp_activation: choice('relu', 'gelu', 'leaky_relu')
      widedeep_tab_mlp.mlp_dropout: choice(0.05, 0.1, 0.15)
      widedeep_tab_mlp.mlp_linear_first: choice(False, True)
